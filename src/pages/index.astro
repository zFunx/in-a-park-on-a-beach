---
import Layout from "../layouts/BaseLayout.astro";

// Components
import RecentArticles from "../components/RecentArticles.astro";
import Desc from "../components/Desc.astro";
import Button from "../components/Button.jsx";

// Helpers
import { checkIfLoggedIn } from "../lib/cookie-helper";
import { format } from "date-fns";
const getQueryParam = param => Astro.url.searchParams.get(param);

// Firebase
import firebase from "../lib/init-firebase";
import { getFirestore } from "firebase/firestore";
import {
  collection,
  query,
  getDocs,
  limit,
  orderBy,
  startAt,
} from "firebase/firestore";
const db = getFirestore(firebase);

// Get articles
const beforeDateStr = getQueryParam("before") || undefined;
const beforeDate = new Date(beforeDateStr).toString() !== "Invalid Date" ? new Date(beforeDateStr) : null;
const perPageArticles = 2;
const q = query(
  collection(db, "articles"),
  orderBy("updated_at", "desc"),
  startAt(beforeDate ? beforeDate : new Date()),
  limit(perPageArticles)
);
const docs = await getDocs(q);
const articles = [];
let prevBeforeDate = null,
  nextBeforeDate = null;
let docIndex = 0;
docs.forEach((doc) => {
  // doc.data() is never undefined for query doc snapshots
  if (docIndex == 0) {
    // prevBeforeDate = format(
    //   new Date(doc.data().updated_at.toDate()),
    //   "yyyy-MM-dd HH:mm:ss"
    // );
  } else if (docIndex == docs.size - 1) {
    nextBeforeDate = format(
      new Date(doc.data().updated_at.toDate()),
      "yyyy-MM-dd HH:mm:ss"
    );
  }

  articles.push({
    id: doc.id,
    ...doc.data(),
  });
  docIndex++;
});

const isLoggedIn = checkIfLoggedIn(Astro.request.headers);

---

<Layout>
  <div class="flex flex-col-reverse md:flex-row">
    <!-- List of Articles -->
    <div
      class={`basis-2/3 ${
        isLoggedIn ? "pt-0" : "pt-8"
      } px-4 pb-4 md:px-16 md:py-8 flex flex-col items-center`}
    >
      <!-- <div class="mb-7 mx-2">
          <Desc />
        </div> -->
      <RecentArticles articles={articles} />
      <div class="flex gap-4">
        {
          beforeDate && (
            <a href="javascript:history.back()">
              <Button>Previous</Button>
            </a>
          )
        }
        {
          articles.length == perPageArticles && (
            <a href={`?before=${nextBeforeDate}`}>
              <Button>Next</Button>
            </a>
          )
        }
      </div>
    </div>

    <!-- Aside -->
    {
      isLoggedIn && (
        <div class="basis-1/3 py-8 px-4 md:px-16 md:px-8">
          <a href="/create">
            <Button>Create an article</Button>
          </a>
        </div>
      )
    }
  </div>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
